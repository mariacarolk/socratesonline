name: Backup PostgreSQL to S3

on:
  schedule:
    # Executa todos os dias √†s 02:00 UTC (23:00 Bras√≠lia no hor√°rio padr√£o)
    - cron: '0 2 * * *'
    
    # üïê OUTROS HOR√ÅRIOS DISPON√çVEIS (descomente o desejado):
    # - cron: '0 6 * * *'    # 06:00 UTC (03:00 Bras√≠lia)
    # - cron: '30 1 * * *'   # 01:30 UTC (22:30 Bras√≠lia)  
    # - cron: '0 2 * * 0'    # Apenas domingos √†s 02:00 UTC
    # - cron: '0 2 1 * *'    # Apenas dia 1 de cada m√™s √†s 02:00 UTC
    # - cron: '0 */6 * * *'  # A cada 6 horas (00:00, 06:00, 12:00, 18:00 UTC)
    # - cron: '0 3 * * 1-5'  # Segunda a sexta √†s 03:00 UTC (apenas dias √∫teis)
  
  # Permite execu√ß√£o manual
  workflow_dispatch:
    inputs:
      force_backup:
        description: 'For√ßar backup mesmo se houver erro'
        required: false
        default: 'false'
        type: boolean

env:
  PYTHON_VERSION: '3.11'

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Instalar PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        
    - name: Instalar depend√™ncias Python
      run: |
        pip install boto3 python-dotenv
        
    - name: Verificar pg_dump
      run: |
        pg_dump --version
        
    - name: Executar backup
      env:
        # Configura√ß√µes do Railway PostgreSQL
        DATABASE_URL: ${{ secrets.RAILWAY_DATABASE_URL }}
        
        # Configura√ß√µes AWS S3
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BACKUP_BUCKET: ${{ secrets.S3_BACKUP_BUCKET }}
        S3_BACKUP_REGION: ${{ secrets.S3_BACKUP_REGION }}
        
        # Configura√ß√µes de backup
        BACKUP_PREFIX: socrates-online
        BACKUP_RETENTION_DAYS: 30
        
      run: |
        python scripts/backup_postgres_s3.py
        
    - name: Notificar falha (opcional)
      if: failure()
      run: |
        echo "Backup falhou! Verifique os logs."
        # Aqui voc√™ pode adicionar notifica√ß√£o por email, Slack, etc.
        
    - name: Notificar sucesso
      if: success()
      run: |
        echo "Backup executado com sucesso!"
        # Aqui voc√™ pode adicionar notifica√ß√£o de sucesso se desejar
