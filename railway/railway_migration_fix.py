#!/usr/bin/env python
"""
Script para corrigir problemas de migra√ß√£o no Railway
Especificamente para resolver o erro KeyError: 'dae112c6d426'
"""
import os
import subprocess
import sys
from sqlalchemy import create_engine, text

print("=" * 60)
print(" RAILWAY MIGRATION FIX")
print("=" * 60)

# Configurar ambiente
os.environ['FLASK_APP'] = 'app.py'

def get_database_url():
    """Obter URL do banco de dados"""
    database_url = os.environ.get('DATABASE_URL')
    if database_url and database_url.startswith('postgres://'):
        database_url = database_url.replace('postgres://', 'postgresql://', 1)
    return database_url

def fix_alembic_version():
    """Corrigir a tabela alembic_version se necess√°rio"""
    try:
        database_url = get_database_url()
        if not database_url:
            print("‚ùå DATABASE_URL n√£o encontrada")
            return False
            
        engine = create_engine(database_url)
        
        with engine.connect() as conn:
            # Verificar se a tabela alembic_version existe
            result = conn.execute(text("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_name = 'alembic_version'
                );
            """))
            
            table_exists = result.scalar()
            
            if table_exists:
                # Verificar a vers√£o atual
                result = conn.execute(text("SELECT version_num FROM alembic_version;"))
                current_version = result.scalar()
                print(f"Vers√£o atual no banco: {current_version}")
                
                # Se a vers√£o for a problem√°tica, corrigir
                if current_version == 'dae112c6d426':
                    print("üîß Corrigindo vers√£o problem√°tica...")
                    conn.execute(text("UPDATE alembic_version SET version_num = 'fix_missing_indexes_railway';"))
                    conn.commit()
                    print("‚úÖ Vers√£o corrigida para 'fix_missing_indexes_railway'")
                    return True
                elif current_version in ['initial', 'fix_missing_indexes_railway', '4769126cc9d9', '8fcd83687262']:
                    print("‚úÖ Vers√£o v√°lida encontrada")
                    return True
                else:
                    print(f"‚ö†Ô∏è Vers√£o desconhecida: {current_version}")
                    # Resetar para a vers√£o inicial segura
                    conn.execute(text("UPDATE alembic_version SET version_num = 'initial';"))
                    conn.commit()
                    print("‚úÖ Resetado para vers√£o inicial")
                    return True
            else:
                print("‚ÑπÔ∏è Tabela alembic_version n√£o existe - ser√° criada na primeira migra√ß√£o")
                return True
                
    except Exception as e:
        print(f"‚ùå Erro ao verificar/corrigir alembic_version: {e}")
        return False

def run_migrations():
    """Executar migra√ß√µes"""
    print("\nüîÑ Aplicando migra√ß√µes...")
    try:
        # Primeiro, tentar stamp para garantir que estamos na vers√£o correta
        result = subprocess.run(['flask', 'db', 'stamp', 'head'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Stamp realizado com sucesso")
        else:
            print(f"‚ö†Ô∏è Aviso no stamp: {result.stderr}")
        
        # Agora aplicar as migra√ß√µes
        result = subprocess.run(['flask', 'db', 'upgrade'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Migra√ß√µes aplicadas com sucesso")
            print(result.stdout)
            return True
        else:
            print("‚ùå Falha nas migra√ß√µes:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao executar migra√ß√µes: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üîç Verificando e corrigindo problemas de migra√ß√£o...")
    
    # Primeiro, tentar corrigir a tabela alembic_version
    if not fix_alembic_version():
        print("‚ùå Falha ao corrigir alembic_version")
        sys.exit(1)
    
    # Executar migra√ß√µes
    if not run_migrations():
        print("‚ùå Falha ao executar migra√ß√µes")
        sys.exit(1)
    
    print("\n" + "=" * 60)
    print(" ‚úÖ CORRE√á√ÉO DE MIGRA√á√ÉO CONCLU√çDA")
    print("=" * 60)

if __name__ == "__main__":
    main()
