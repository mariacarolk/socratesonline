"""Adicionar campo valor_pago_socrates nas tabelas despesas_evento e despesas_empresa

Revision ID: dae112c6d426
Revises: initial
Create Date: 2025-09-17 15:40:55.101391

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dae112c6d426'
down_revision = 'initial'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('colaborador', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('despesas_empresa', schema=None) as batch_op:
        batch_op.add_column(sa.Column('valor_pago_socrates', sa.Float(), nullable=True))

    with op.batch_alter_table('despesas_evento', schema=None) as batch_op:
        batch_op.add_column(sa.Column('valor_pago_socrates', sa.Float(), nullable=True))

    with op.batch_alter_table('escola', schema=None) as batch_op:
        # Dropa índices apenas se existirem
        try:
            batch_op.drop_index('idx_escola_cidade')
        except:
            pass
        try:
            batch_op.drop_index('idx_escola_estado')
        except:
            pass

    with op.batch_alter_table('ipva_veiculo', schema=None) as batch_op:
        # Dropa índices apenas se existirem
        try:
            batch_op.drop_index('idx_ipva_veiculo_ano_exercicio')
        except:
            pass
        try:
            batch_op.drop_index('idx_ipva_veiculo_id_veiculo')
        except:
            pass
        try:
            batch_op.drop_index('idx_ipva_veiculo_status')
        except:
            pass
        batch_op.drop_constraint(batch_op.f('uk_ipva_veiculo_ano'), type_='unique')
        batch_op.drop_constraint(batch_op.f('ipva_veiculo_id_veiculo_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'veiculo', ['id_veiculo'], ['id_veiculo'])

    with op.batch_alter_table('licenciamento_veiculo', schema=None) as batch_op:
        # Dropa índices apenas se existirem
        try:
            batch_op.drop_index('idx_licenciamento_veiculo_ano_exercicio')
        except:
            pass
        try:
            batch_op.drop_index('idx_licenciamento_veiculo_id_veiculo')
        except:
            pass
        try:
            batch_op.drop_index('idx_licenciamento_veiculo_status')
        except:
            pass
        batch_op.drop_constraint(batch_op.f('uk_licenciamento_veiculo_ano'), type_='unique')
        batch_op.drop_constraint(batch_op.f('licenciamento_veiculo_id_veiculo_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'veiculo', ['id_veiculo'], ['id_veiculo'])

    with op.batch_alter_table('log_sistema', schema=None) as batch_op:
        # Dropa índices apenas se existirem
        try:
            batch_op.drop_index('idx_log_sistema_acao')
        except:
            pass
        try:
            batch_op.drop_index('idx_log_sistema_data_hora')
        except:
            pass
        try:
            batch_op.drop_index('idx_log_sistema_usuario_id')
        except:
            pass

    with op.batch_alter_table('manutencao_veiculo', schema=None) as batch_op:
        # Dropa índices apenas se existirem
        try:
            batch_op.drop_index('idx_manutencao_veiculo_data_servico')
        except:
            pass
        try:
            batch_op.drop_index('idx_manutencao_veiculo_id_veiculo')
        except:
            pass
        try:
            batch_op.drop_index('idx_manutencao_veiculo_tipo_manutencao')
        except:
            pass
        batch_op.drop_constraint(batch_op.f('manutencao_veiculo_id_veiculo_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'veiculo', ['id_veiculo'], ['id_veiculo'])

    with op.batch_alter_table('multa_veiculo', schema=None) as batch_op:
        # Dropa índices apenas se existirem
        try:
            batch_op.drop_index('idx_multa_veiculo_data_infracao')
        except:
            pass
        try:
            batch_op.drop_index('idx_multa_veiculo_id_veiculo')
        except:
            pass
        try:
            batch_op.drop_index('idx_multa_veiculo_status')
        except:
            pass
        batch_op.drop_constraint(batch_op.f('multa_veiculo_id_veiculo_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'veiculo', ['id_veiculo'], ['id_veiculo'])

    with op.batch_alter_table('visita_escola', schema=None) as batch_op:
        # Dropa índices apenas se existirem
        try:
            batch_op.drop_index('idx_visita_escola_data')
        except:
            pass
        try:
            batch_op.drop_index('idx_visita_escola_escola')
        except:
            pass
        try:
            batch_op.drop_index('idx_visita_escola_promotor')
        except:
            pass
        try:
            batch_op.drop_index('idx_visita_escola_status')
        except:
            pass

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('visita_escola', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_visita_escola_status'), ['status_visita'], unique=False)
        batch_op.create_index(batch_op.f('idx_visita_escola_promotor'), ['id_promotor'], unique=False)
        batch_op.create_index(batch_op.f('idx_visita_escola_escola'), ['id_escola'], unique=False)
        batch_op.create_index(batch_op.f('idx_visita_escola_data'), ['data_visita'], unique=False)

    with op.batch_alter_table('multa_veiculo', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('multa_veiculo_id_veiculo_fkey'), 'veiculo', ['id_veiculo'], ['id_veiculo'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_multa_veiculo_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('idx_multa_veiculo_id_veiculo'), ['id_veiculo'], unique=False)
        batch_op.create_index(batch_op.f('idx_multa_veiculo_data_infracao'), ['data_infracao'], unique=False)

    with op.batch_alter_table('manutencao_veiculo', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('manutencao_veiculo_id_veiculo_fkey'), 'veiculo', ['id_veiculo'], ['id_veiculo'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_manutencao_veiculo_tipo_manutencao'), ['tipo_manutencao'], unique=False)
        batch_op.create_index(batch_op.f('idx_manutencao_veiculo_id_veiculo'), ['id_veiculo'], unique=False)
        batch_op.create_index(batch_op.f('idx_manutencao_veiculo_data_servico'), ['data_servico'], unique=False)

    with op.batch_alter_table('log_sistema', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_log_sistema_usuario_id'), ['usuario_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_log_sistema_data_hora'), ['data_hora'], unique=False)
        batch_op.create_index(batch_op.f('idx_log_sistema_acao'), ['acao'], unique=False)

    with op.batch_alter_table('licenciamento_veiculo', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('licenciamento_veiculo_id_veiculo_fkey'), 'veiculo', ['id_veiculo'], ['id_veiculo'], ondelete='CASCADE')
        batch_op.create_unique_constraint(batch_op.f('uk_licenciamento_veiculo_ano'), ['id_veiculo', 'ano_exercicio'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('idx_licenciamento_veiculo_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('idx_licenciamento_veiculo_id_veiculo'), ['id_veiculo'], unique=False)
        batch_op.create_index(batch_op.f('idx_licenciamento_veiculo_ano_exercicio'), ['ano_exercicio'], unique=False)

    with op.batch_alter_table('ipva_veiculo', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('ipva_veiculo_id_veiculo_fkey'), 'veiculo', ['id_veiculo'], ['id_veiculo'], ondelete='CASCADE')
        batch_op.create_unique_constraint(batch_op.f('uk_ipva_veiculo_ano'), ['id_veiculo', 'ano_exercicio'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('idx_ipva_veiculo_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('idx_ipva_veiculo_id_veiculo'), ['id_veiculo'], unique=False)
        batch_op.create_index(batch_op.f('idx_ipva_veiculo_ano_exercicio'), ['ano_exercicio'], unique=False)

    with op.batch_alter_table('escola', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_escola_estado'), ['estado'], unique=False)
        batch_op.create_index(batch_op.f('idx_escola_cidade'), ['cidade'], unique=False)

    with op.batch_alter_table('despesas_evento', schema=None) as batch_op:
        batch_op.drop_column('valor_pago_socrates')

    with op.batch_alter_table('despesas_empresa', schema=None) as batch_op:
        batch_op.drop_column('valor_pago_socrates')

    with op.batch_alter_table('colaborador', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)

    # ### end Alembic commands ###
